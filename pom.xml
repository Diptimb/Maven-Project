<project xmlns="http://maven.apache.org/POM/4.0.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <groupId>com.mindtree</groupId>
     <artifactId>AppRunner</artifactId>
     <version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
     <dependencies>
           <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13</version>
                <scope>test</scope>
           </dependency>
	     <dependency>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-maven2-plugin</artifactId>
    <version>1.5.0</version>
</dependency>

            <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>	
		</dependency>
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>3.11</version>
</dependency>
     </dependencies>
     <build>
           <plugins>
                <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-compiler-plugin</artifactId>
                     <version>3.3</version>
                     <configuration>
                           <source>1.8</source>
                           <target>1.8</target>
                     </configuration>
                </plugin>
                <plugin>
                     <artifactId>maven-assembly-plugin</artifactId>
                     <configuration>
                           <archive>
                                <manifest>
                                     <mainClass>com.mindtree.movies.client.AppRunner</mainClass>
                                </manifest>
                           </archive>
                           <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                           </descriptorRefs>
                     </configuration>
                     <executions>
                           <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                     <goal>single</goal>
                                </goals>
                           </execution>
                     </executions>
                </plugin>
		   <plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		   <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>1.5.0</version>
          <configuration>
            <container>
              <!-- https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html#Maven2PluginReferenceGuide-container -->
              <containerId>tomcat8x</containerId>
		    <zipUrlInstaller>
                <url>http://repo1.maven.org/maven2/org/apache/tomcat/tomcat/8.0.35/tomcat-8.0.35.zip</url>
              </zipUrlInstaller>
              <!-- Instead of downloading the container, you can also reuse an existing installation by settings its directory:
              <home>/Users/horsti/files/tomcats/apache-tomcat-8.5.4</home> -->
              <output>${project.build.directory}/tomcat8x/container.log</output>â€¨
              <!-- If true, then the file specified by <output> will not be erased across different runs -->
              <append>false</append>
              <!-- set this value if your web app is taking some time to start -->
              <!--timeout>360000</timeout-->
            </container>
            <configuration>
              <type>standalone</type>
              <home>${project.build.directory}/tomcat8x</home>
              <properties>
                <cargo.servlet.port>8081</cargo.servlet.port>
                <cargo.logging>high</cargo.logging>
                <cargo.jvmargs>-XX:MaxPermSize=512m -Xms256m -Xmx3072m -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 -XX:+DisableExplicitGC -Xverify:none -Djava.awt.headless=true</cargo.jvmargs>
              </properties>
            </configuration>
            <deployables>
              <deployable>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <type>war</type>
                <properties>
                  <!-- set the context for your web app so the correct configuration is applied -->
                  <context>/dev</context>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </plugin>
           </plugins>
     </build>

</project>
